@import "@/styles/variables";

.root {
  display: inline-block;
}

/* When Trigger is used with `asChild`, we wrap it so we can hold a ref */
.triggerWrap {
  display: inline-block;
}

.trigger {
  width: 32px;
  height: 32px;
  padding: 0;
  border: 1px solid var(--border);
  border-radius: var(--radius-200, 10px);
  background: var(--accent);
  color: var(--on-accent, var(--text));
  cursor: pointer;

  &:hover,
  &:focus-visible {
    background: color-mix(in oklab, var(--accent) 85%, var(--bg));
  }
}

/* The menu itself is portalled and positioned with inline style (fixed) */
.content {
  min-width: 180px;
  padding: 6px;
  border-radius: var(--radius-200, 10px);
  background: var(--secondary);
  color: var(--on-secondary, var(--text));
  border: 1px solid var(--border);
  box-shadow:
    0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px  6px -4px rgba(0, 0, 0, 0.1);
  z-index: 1000; /* fallback; inline style also sets */
  animation: ddIn 120ms ease-out;
}

/* We still keep align classes for arrow placement if needed */

.item {
  width: 100%;
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 10px;
  border-radius: var(--radius-150, 8px);
  background: transparent;
  border: 0;
  color: var(--text);
  text-align: left;
  cursor: pointer;
  font: inherit;
  outline: none;

  &:hover,
  &:focus {
    background: var(--accent);
  }
}

.disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

.destructive {
  color: var(--destructive);

  &:hover,
  &:focus {
    background: color-mix(in oklab, var(--destructive) 15%, transparent);
  }
}

.separator {
  height: 1px;
  margin: 6px;
  background: var(--border);
}

.label {
  padding: 6px 10px 4px;
  font-size: var(--fs-200, 12px);
  color: var(--subtle);
  text-transform: uppercase;
  letter-spacing: 0.04em;
}

/* caret */
.arrow {
  position: absolute;
  top: -6px;
  right: 12px;
  width: 10px;
  height: 10px;
  background: inherit;
  border-top: 1px solid var(--border);
  border-left: 1px solid var(--border);
  transform: rotate(45deg);
  z-index: -1;
}

@keyframes ddIn {
  from { opacity: 0; transform: translateY(-4px) scale(0.98); }
  to   { opacity: 1; transform: translateY(0) scale(1); }
}
